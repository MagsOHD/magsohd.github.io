name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    environment: github-pages
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Inject ntfy.sh topic via HTML meta tags and JS config
        run: |
          echo "üîî INJECTION ntfy.sh topic via META TAGS et CONFIG JS"

          # V√©rifier si le secret NTFY_TOPIC est d√©fini
          if [ -z "${{ secrets.NTFY_TOPIC }}" ]; then
            echo "‚ö†Ô∏è ATTENTION: Secret NTFY_TOPIC non d√©fini - utilisation du fallback"
            NTFY_TOPIC_VALUE="lucas-portfolio-fallback-$(date +%s)"
          else
            echo "‚úÖ Secret NTFY_TOPIC trouv√©"
            NTFY_TOPIC_VALUE="${{ secrets.NTFY_TOPIC }}"
          fi

          echo "Topic √† utiliser: $NTFY_TOPIC_VALUE"

          # Test si les fichiers existent
          ls -la currentFolio/*.html

          # Injecter dans tous les fichiers HTML avec une m√©thode plus robuste
          for file in currentFolio/*.html; do
            if [ -f "$file" ]; then
              echo "=== Traitement de $file ==="
              echo "Contenu avant injection (premi√®res lignes):"
              head -10 "$file"

              # Cr√©er un fichier temporaire avec l'injection du meta tag ntfy
              awk -v topic="$NTFY_TOPIC_VALUE" '
              /<head>/ {
                print $0
                print "    <meta name=\"ntfy-topic\" content=\"" topic "\">"
                next
              }
              { print }
              ' "$file" > "$file.tmp"

              # Remplacer le fichier original
              mv "$file.tmp" "$file"

              echo "Contenu apr√®s injection (premi√®res lignes):"
              head -10 "$file"
              echo "‚úÖ Meta tag ntfy ajout√©e √† $file"
            fi
          done

          echo "=== INJECTION DANS LE FICHIER CONFIG JS ==="
          if [ -f "currentFolio/ntfy-config.js" ]; then
            echo "Contenu avant injection:"
            cat currentFolio/ntfy-config.js

            # Remplacer diff√©rents patterns pour le topic
            sed -i "s|lucas-portfolio-dev-[^']*|$NTFY_TOPIC_VALUE|g" currentFolio/ntfy-config.js
            sed -i "s/YOUR_NTFY_TOPIC/$NTFY_TOPIC_VALUE/g" currentFolio/ntfy-config.js

            echo "Contenu apr√®s injection:"
            cat currentFolio/ntfy-config.js
            echo "‚úÖ Topic ntfy.sh inject√© dans ntfy-config.js"
          else
            echo "‚ùå ATTENTION: ntfy-config.js non trouv√©"
          fi

          echo "=== V√âRIFICATION FINALE ==="
          if grep -r "ntfy-topic" currentFolio/*.html; then
            echo "‚úÖ Meta tags ntfy trouv√©es dans les fichiers HTML"
          else
            echo "‚ö†Ô∏è WARNING: Aucune meta tag ntfy trouv√©e"
          fi

          if grep -r "$NTFY_TOPIC_VALUE" currentFolio/ntfy-config.js; then
            echo "‚úÖ Topic ntfy.sh configur√© dans le fichier JS"
          else
            echo "‚ö†Ô∏è WARNING: Topic ntfy.sh non configur√© dans le JS"
          fi

          echo "‚úÖ Injection ntfy.sh termin√©e avec succ√®s"
        env:
          NTFY_TOPIC: ${{ secrets.NTFY_TOPIC }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
